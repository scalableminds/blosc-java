name: CI

on:
  push:

jobs:
  build_bloscjni:
    strategy:
      matrix:
        os: [ ubuntu, windows, macos ]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'

      - name: Build c-blosc (Windows)
        if: ${{ matrix.os == 'windows' }}
        run: |
          cd c-blosc
          mkdir build
          cd build
          cmake -G "MinGW Makefiles" .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build . -j8 --config Release

      - name: Build c-blosc (Linux, Mac)
        if: ${{ matrix.os != 'windows' }}
        run: |
          cd c-blosc
          mkdir build
          cd build
          cmake .. -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_BUILD_TYPE=Release
          cmake --build . -j8 --config Release

      - name: Prepare resources folder
        run: mkdir src/main/resources

      - name: Build bloscjni (Linux)
        if: ${{ matrix.os == 'ubuntu' }}
        run: |
          cd bloscjni
          gcc \
            -I"$JAVA_HOME/include" -I"$JAVA_HOME/include/linux" \
            -shared -lc -fPIC -o ../src/main/resources/libbloscjni.so -O3 \
            bloscjni.c ../c-blosc/build/blosc/libblosc.a

      - name: Build bloscjni (Mac)
        if: ${{ matrix.os == 'macos' }}
        run: |
          cd bloscjni
          gcc \
            -I"$JAVA_HOME/include" -I"$JAVA_HOME/include/darwin" \
            -dynamiclib -o ../src/main/resources/libbloscjni.dylib -O3 \
            bloscjni.c ../c-blosc/build/blosc/libblosc.a

      - name: Build bloscjni (Windows)
        if: ${{ matrix.os == 'windows' }}
        shell: bash
        run: |
          cd bloscjni
          x86_64-w64-mingw32-gcc \
            -I"$JAVA_HOME\\include" -I"$JAVA_HOME\\include\\win32" -O3 \
            -shared -o ..\\src\\main\\resources\\libbloscjni.dll \
            bloscjni.c ..\\c-blosc\\build\\blosc\\libblosc.a

      - name: Build blosc-java
        run: |
          mvn compile

      - name: Test blosc-java
        run: |
          mvn test

      - uses: actions/upload-artifact@v3
        with:
          name: bloscjni-${{ matrix.os }}
          path: src/main/resources

  build_jar:
    needs: [ build_bloscjni ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'

      - uses: actions/download-artifact@v3
        with:
          path: src/main/resources

      - name: Rename JNI dynamic libraries
        run: |
          mv src/main/resources/*/* src/main/resources

      - name: Assembly JAR
        run: |
          mvn package -Dmaven.test.skip

      - uses: actions/upload-artifact@v3
        with:
          name: blosc-jar
          path: target/*.jar

      - run: java -cp target/*.jar dev.zarr.bloscjava.Blosc
